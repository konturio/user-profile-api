---
- hosts: all
  any_errors_fatal: true
  vars:
    app_name: user-profile-api
    home: '{{ ansible_env.HOME }}'
    app_home: '{{ home }}/{{ app_name }}'
  tasks:
    - name: Creating app directory if it does not exist
      file:
        path: '{{ app_home }}/{{ app_name }}_{{ version }}'
        state: directory
        mode: 0750

    - name: Uploading and unpacking an artifact
      unarchive:
        src: '{{ path_to_dist }}'
        dest: '{{ app_home }}/{{ app_name }}_{{ version }}'

    - name: Publishing current app version (1 of 2)
      file:
        path: '{{ app_home }}/current'
        state: absent

    - name: Publishing current app version (2 of 2)
      file:
        src: '{{ app_name }}_{{ version }}'
        dest: '{{ app_home }}/current'
        state: link
        force: true

    - name: Publishing initial versions of app configs (1 of 2)
      copy:
        src: '{{ app_home }}/current/config.yaml'
        dest: '{{ app_home }}/config.local.yaml'
        remote_src: true
        force: false
    - name: Publishing initial versions of app configs (2 of 2)
      copy:
        src: '{{ app_home }}/current/environment.rc.sample'
        dest: '{{ app_home }}/environment.rc'
        remote_src: true
        force: false

    - name: 'Deploying {{ app_name }}.service'
      block:
        - file:
            path: '{{ home }}/bin/'
            state: directory
            recurse: true
        - get_url:
            url: 'https://puppetmaster-eu-central-1-kontur.s3.eu-central-1.amazonaws.com/scripts/systemd-service-wrapper/wrapper.sh'
            dest: '{{ home }}/bin/wrapper.sh'
            mode: 0750
            force: true
            backup: true
        - file:
            src: '{{ home }}/bin/wrapper.sh'
            dest: '{{ home }}/bin/{{ app_name }}'
            state: link
            force: true
        - file:
            path: '{{ home }}/.config/systemd/user/'
            state: directory
            recurse: true
        - find:
            paths: '{{ app_home }}/current'
            patterns: user-profile-api-*.jar
            recurse: true
            depth: 2
          register: find_ret
        - replace:
            path: '{{ app_home }}/current/{{ app_name }}.service'
            regexp: '%JAR_FILE%'
            replace: '{{ item.path | basename }}'
          register: replace_ret
          with_items: '{{ find_ret.files }}'
        - copy:
            src: '{{ app_home }}/current/{{ app_name }}.service'
            dest: '{{ home }}/.config/systemd/user/{{ app_name }}.service'
            remote_src: true
            force: true
          register: copy_ret

        - name: Reloading systemd manager configuration
          systemd:
            daemon_reload: true
            scope: user
          when: ( copy_ret.changed or replace_ret.changed )

    - name: Restarting the service
      systemd:
        name: '{{ app_name }}'
        state: restarted
        enabled: true
        force: true
        scope: user
