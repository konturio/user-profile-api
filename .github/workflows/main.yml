--- # Time-stamp: <2022-09-21 21:38:38>

name: 01 Building with Gradle

on:
  push:
    branches:
    - '**'

jobs:
  helper:
    uses: ./.github/workflows/migration-helper01.yml
  gradle:
    runs-on: ubuntu-latest
    needs: helper
    # strategy:
    #   matrix:
    #     os:
    #       - ubuntu-latest
    # runs-on: '${{ matrix.os }}'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto
          cache: gradle

      - name: Extracting metadata from a cloned repository
        id: get-cloned
        run: |-
          echo "::set-output name=SHA::$(git log -1 --format='%h')"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3.2

      - name: Checking and building with Gradle
        env:
          NEXUS_DEPLOYER: ${{ secrets.NEXUS_DEPLOYER }}
          NEXUS_DEPLOYER_PASS: ${{ secrets.NEXUS_DEPLOYER_PASS }}
          NEXUS_READER: ${{ secrets.NEXUS_READER }}
          NEXUS_READER_PASS: ${{ secrets.NEXUS_READER_PASS }}
          IMAGE_TAG: ${{ github.ref_name }}.${{ steps.get-cloned.outputs.SHA }}.${{ github.run_attempt }}
        run: |-
          set -x
          for t in check build jib; do
              sh gradlew --console plain "$t" \
                || { \
                      tar --show-transformed-names --transform="s@^build/reports/tests/test@test_report@" -cvf - build/reports/tests/test/* | xz -1 > test-report-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}.tar.xz; \
                      sh gradlew --console plain --info "$t"; \
                      exit 1; \
                   }
          done
          set +x
          tar --show-transformed-names --transform="s@^build/libs/@@;s@^build/resources/main/external/@@;" -cvf - build/libs/*.jar build/resources/main/external/* | xz -1 > user-profile-api-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}.tar.xz
          awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' build/jacoco.csv
          echo "<h3>Docker image tag</h3> $IMAGE_TAG <br><br>" >> $GITHUB_STEP_SUMMARY

      - name: Uploading build and test artifacts
        uses: actions/upload-artifact@v3.1.0
        if: always()
        with:
          name: 'user-profile-api-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}'
          path: |-
            *.tar.xz
            keycloak-user-spi/build/libs/keycloak-user-spi.jar

      - name: Publishing JUnit Test result report
        uses: konturio/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Login to Nexus Container Registry
        uses: docker/login-action@v2
        with:
          registry: nexus.kontur.io:8085
          username: ${{ secrets.NEXUS_DEPLOYER }}
          password: ${{ secrets.NEXUS_DEPLOYER_PASS }}

      - name: Extract Docker metadata - Keycloak User SPI Plugin
        uses: docker/metadata-action@v4.0.1
        id: meta
        with:
          images: nexus.kontur.io:8085/konturdev/keycloak-with-ups-spi #TODO check - tag is not specified
          tags: |
            type=raw,value=${{ github.ref_name }}.{{sha}}.${{ github.run_attempt }}

      - name: Build and push Docker image - Keycloak User SPI Plugin
        uses: docker/build-push-action@v3.0.0
        with:
          context: keycloak-user-spi
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}