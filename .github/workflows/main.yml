--- # Time-stamp: <2022-09-21 21:38:38>

name: 01 Building with Gradle

on:
  push:
    branches:
    - '**'

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_NAMESPACE: ${{ github.repository_owner }}
  DOCKER_USERNAME:  ${{ github.actor }}
  DOCKER_IMAGE_KEYCLOAK: keycloak-with-ups-spi
  DOCKER_IMAGE_API:      user-profile-api

jobs:
  helper:
    uses: ./.github/workflows/migration-helper01.yml
  gradle:
    runs-on: ubuntu-latest
    needs: helper
    # strategy:
    #   matrix:
    #     os:
    #       - ubuntu-latest
    # runs-on: '${{ matrix.os }}'
    # permissions according to https://docs.github.com/en/actions/tutorials/publish-packages/publish-docker-images
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17 # Keycloak image uses 17, so update JDK in Keycloak before changing this
          distribution: corretto
          cache: gradle

      - name: Extracting metadata from a cloned repository
        id: get-cloned
        run: |-
          echo "::set-output name=SHA::$(git log -1 --format='%h')"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3.2

      - name: Checking and building with Gradle
          DOCKER_IMAGE:     ${{ env.DOCKER_IMAGE_API }}
          DOCKER_REGISTRY:  ${{ env.DOCKER_REGISTRY  }}
          DOCKER_NAMESPACE: ${{ env.DOCKER_NAMESPACE }}
          DOCKER_READER_USER: ${{ env.DOCKER_USERNAME  }}
          DOCKER_READER_PASS: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_WRITER_USER: ${{ env.DOCKER_USERNAME  }}
          DOCKER_WRITER_PASS: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_IMAGE_TAG: ${{ format('{0}.{1}.{2}', github.ref_name, steps.get-cloned.outputs.SHA, github.run_attempt) }}
        run: |-
          set -x
          export IMAGE_TAG=$(echo "$IMAGE_TAG" | tr '/' '-')
          for t in check build jib; do
              sh gradlew --console plain "$t" \
                || { \
                      tar --show-transformed-names --transform="s@^build/reports/tests/test@test_report@" -cvf - build/reports/tests/test/* | xz -1 > test-report-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}.tar.xz; \
                      sh gradlew --console plain --info "$t"; \
                      exit 1; \
                   }
          done
          set +x
          tar --show-transformed-names --transform="s@^build/libs/@@;s@^build/resources/main/external/@@;" -cvf - build/libs/*.jar build/resources/main/external/* | xz -1 > user-profile-api-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}.tar.xz
          awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' build/jacoco.csv
          echo "<h3>Docker image tag</h3> $IMAGE_TAG <br><br>" >> $GITHUB_STEP_SUMMARY

      - name: Uploading build and test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'user-profile-api-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}'
          path: |-
            *.tar.xz
            keycloak-user-spi/build/libs/keycloak-user-spi.jar

      - name: Publishing JUnit Test result report
        uses: konturio/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata - Keycloak User SPI Plugin
        uses: docker/metadata-action@v4.0.1
        id: meta
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_IMAGE_KEYCLOAK }}
          tags: |
            type=raw,value=${{ github.ref_name }}.{{sha}}.${{ github.run_attempt }}

      - name: Build and push Docker image - Keycloak User SPI Plugin
        uses: docker/build-push-action@v3.0.0
        with:
          context: keycloak-user-spi
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
